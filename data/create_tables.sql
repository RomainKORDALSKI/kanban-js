BEGIN;

DROP TABLE IF EXISTS "list", "card", "tag", "card_has_tag";

CREATE TABLE "list" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" TEXT NOT NULL,
  "position" INT NOT NULL DEFAULT 1, 
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT(now()),
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" TEXT NOT NULL,
  "content" TEXT NOT NULL,
  "position" INT NOT NULL DEFAULT 1,
  "color" VARCHAR(7),
  "list_id" INTEGER NOT NULL REFERENCES "list" ("id") ON DELETE CASCADE, -- CASCADE pour supprimer une carte si la liste est supprimée
  "created_at" TIMESTAMPTZ NOT NULL default(now()),
  "updated_at" TIMESTAMPTZ
);

CREATE TABLE "tag" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" TEXT NOT NULL UNIQUE,
  "color" VARCHAR(7),
  "created_at" TIMESTAMPTZ NOT NULL default(now()),
  "updated_at" TIMESTAMPTZ
);

  CREATE TABLE "card_has_tag" (
  "id" INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  "card_id" INT NOT NULL REFERENCES "card"("id") ON DELETE CASCADE, -- CASCADE pour supprimer l'association si la carte est supprimée
  "tag_id" INT NOT NULL REFERENCES "tag"("id") ON DELETE CASCADE, -- CASCADE pour supprimer l'association si le tag est supprimé
  UNIQUE ("card_id", "tag_id"), -- une carte ne peut être associée qu'une seule fois à un tag
  "created_at" TIMESTAMPTZ NOT NULL default(now()),
  "updated_at" TIMESTAMPTZ
);

COMMIT;

